/* autoconfig.h.in.  Generated automatically from configure.in by autoheader.  */

/* Define to empty if the keyword does not work.  */
#undef const

/* Define as __inline if that's what the C compiler calls it.  */
#undef inline

/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS

/* Define if you can safely include both <sys/time.h> and <time.h>.  */
#undef TIME_WITH_SYS_TIME

/* Define if your <sys/time.h> declares struct tm.  */
#undef TM_IN_SYS_TIME

/* Do we have a version of SDL that we can compile against? */
#undef HAVE_SDL

/* Do we have a version of libkmidi that we can compile against? */
#undef HAVE_LIBKMIDI

/* Do we have a version of freetype that we can compile against? */
#undef HAVE_FREETYPE

      
#undef PACKAGE
#undef VERSION

/* Was debugging selected from configure? */
#undef DEBUG

/* Multiple inclusion preventer. Is there a cleaner way to do this in autconf files? */
#undef AUTOCONFIGURED

/* Define if you have the <dirent.h> header file.  */
#undef HAVE_DIRENT_H

/* Define if you have the <limits.h> header file.  */
#undef HAVE_LIMITS_H

/* Define if you have the <ndir.h> header file.  */
#undef HAVE_NDIR_H

/* Define if you have the <sys/dir.h> header file.  */
#undef HAVE_SYS_DIR_H

/* Define if you have the <sys/ndir.h> header file.  */
#undef HAVE_SYS_NDIR_H

/* Define if you have the <sys/time.h> header file.  */
#undef HAVE_SYS_TIME_H

/* Define if you have the <unistd.h> header file.  */
#undef HAVE_UNISTD_H

/* Define if the C++ compiler supports BOOL */
#undef HAVE_BOOL

