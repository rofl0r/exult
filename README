EXULT lets you browse around the Ultima7 universe in a window under Linux,
and possibly other Unix systems.  It is released under the GNU General Public
License, and contains source code.

IMPORTANT:  Run "exult" in a clean installation of Ultima7; "exult" should be
installed in a directory where you see the "static" subdirectory.  "Exult" will
create the "gamedat" directory and files the first time you run it.  And al-
though I've tried to be safe about this, I don't recommend trying it on a
game which you're actually in the middle of playing.

** NEW for this release **

CONFIGURATION
-------------
Exult now keeps a configuration file. You can specify where your Ultima7
installation is, whether you want full-screen graphics, or windowed, and
midi devices and midi settings.

If you do not already have a configuration file, Exult will make one for you
prompting you for some information along the way, or filling in sensible
defaults by itself. The location of this file varies slightly. On unix systems
you can expect to find it called $HOME/.exult.cfg while other operating systems
will probably locate it as 'exult.cfg' in the same directory as the exult
binary.

The file uses a simple hierarchical XML-like syntax, which should be simple to
understand and modify. Take care though. Handling of syntax errors in this file
is not well tested.

AUDIO
-----
Exult can now play the Guardian's sound-bites through SDL, and it's own
internal mixer. No configuration or tuning of this is available in this
release

midi
----
MIDI audio is available for a small subset of people.
What you need:
1) Linux
2) A system capable of playing audio through kmidi. If playing a file 
   through kmidi Does The Right Thing then you should be able to hear
   in-game music.
3) (Alternative to 2): A system capable of playing midi through 'playmidi -e'.
   This doesn't sound as nice as option 2, above, but it's the fallback and
   will work for some setups.

If you don't have linux, or your system doesn't support either of the two
given MIDI audio options, then you'll have to wait. We're still working on
how to generate MIDI on cards without explicit MIDI support, and on multiple
operating system platforms.

Limitation: None of the game-specific instrument voices are loaded. You'll hear
them as whatever the general midi system maps them to. In the case of the Kmidi
driver it's usually a fairly close match. The playmidi driver does rather less
well. Either way, the music still sounds alright. It'll sound better once we
get the right voices in.

--------------------------------------------------------------------------

Starting with version 0.12, Exult uses the multiplatform library SDL by Sam
Lantinga of LokiGames.  SDL provides low-level graphics, timing and sound
capabilities, so a Windows (or Be or Mac) port should be much easier now.

Version 0.10 has a "usecode" interpreter.  The "usecode" file is a compiled
script that drives the plot and conversations of the game.  My interpreter is
missing many of the builtin functions which are not yet known, so things do
not work perfectly.  Still, you can double-click on most of the characters
you see, and you'll be able to have conversations with them.  You can also
walk around using the right mouse button, or use the cursor keys to more
quickly browse around Britannia.

Version 0.09 is the first WIN32 release, done entirely by W.J. Palenstijn.
Please see his "readme.w95" file.

Version 0.08 has greatly improved object identification, thanks to
contributor Tristan Tarrant.

Although I'm designing Exult under X, I want it to be as portable as possible
to other platforms and graphics systems (like SVGALIB and GGI).  This is why
I've gone to the trouble of doing the text rendering using FreeType, since it's
already highly portable and completely graphics-system independent.

This program is based on the work of Gary Thompson, Maxim Shatskih,
Jakob Shonberg, and Wouter Dijkslag in uncovering the format of the Ultima 7 
data files.

Requirements:	Ultima7 must be installed and visible.  The "exult" executable
		should be placed in the top-level u7 directory (where "static"
		appears as a subdirectory).  You also need "avatar.ttf" in the
		same directory as "exult".

		Your X display must be in 8-bit or 16-bit color.
		(24-bit is left as an exercise to the user :-)).

Installation:	On a RedHat Linux system, just type
		'make' in the directory where you unpacked "exult".  On other
		systems, I'm afraid you'll have to modify the "makefile" by
		hand.  Then copy "exult" and "avatar.ttf" to your Ultima7
		directory.  Starting with version 0.04, you also need to have
		the "FreeType" library installed on your system when you build
		"Exult".

		A binary built on a SuSE 6.1 x86 system is included, static-
		ally linked as much as possible.

Caveats:	The program is a memory hog.  Really makes me appreciate
		Origin's accomplishment in making it run under DOS.

		Z-ordering is far from perfect.  Sometimes trees get clipped
		by the roof that's behind them, and objects on top of carpets
		sometimes get clipped.

		I obviously haven't chosen all correct frames for the Avatar's
		animation as he walks around.

		No object avoidance:  you can walk through walls, trees, etc.

		I'm not sure if the program works with a 2-button mouse.

Running:	Hold right mouse button down to move Avatar.
		Click on objects with left button to identify them.
		Double-click on characters to hold conversations.
		Double-click on doors, shutters with left button to open or
			close them.
		Arrow keys scroll around the "universe".
		'q' quits.
		'p' repaints the screen.
		'l' cycles through the "lift factors", causing roofs to
			disappear so you can see inside buildings.
		'+' brightens the palette.
		'-' darkens the palette.

Credits:	The paper by Gary Thompson on the structure of the U7 data
		files was crucial to the early development of Exult.

		Work by Maxim Shatskih, Jakob Shonberg, and Wouter Dijkslag 
		made the "usecode" interpreter possible.
		
		Font rendering is done using the FreeType font engine.

		Thanks also go to the person who wrote u7items.txt and the
		contributor of the "avatar.ttf" font.

I can be reached for complaints/complements/code-modifications at
jeff@simutech.com.

-- Jeff Freedman

